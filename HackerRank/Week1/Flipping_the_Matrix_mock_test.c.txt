#include <stdio.h>
#include <assert.h>

int flippingMatrix(int n, int matrix[2 * 128][2 * 128]) {
    int sum = 0;
    // n is the size of the quadrant
    // The full matrix is 2n x 2n
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            int v1 = matrix[i][j];
            int v2 = matrix[i][2*n-1-j];
            int v3 = matrix[2*n-1-i][j];
            int v4 = matrix[2*n-1-i][2*n-1-j];

            // Pick largest among the 4 symmetric elements
            int max = v1;
            if (v2 > max) max = v2;
            if (v3 > max) max = v3;
            if (v4 > max) max = v4;
            sum += max;
        }
    }
    return sum;
}

int main() {
    int q, n;
    scanf("%d", &q);
    assert(1 <= q && q <= 16);

    for (int qi = 0; qi < q; qi++) {
        scanf("%d", &n);
        assert(1 <= n && n <= 128);
        int matrix[2*128][2*128]; // matrix size up to 256x256
        for (int i = 0; i < 2*n; i++) {
            for (int j = 0; j < 2*n; j++) {
                scanf("%d", &matrix[i][j]);
                assert(0 <= matrix[i][j] && matrix[i][j] <= 4096);
            }
        }

        int result = flippingMatrix(n, matrix);
        printf("%d\n", result);
    }
    return 0;
}
